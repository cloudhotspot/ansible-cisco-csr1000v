---
- name: Create OVF environment folder
  file:
    path: "{{ csr_vm_safe_dst_full_path }}/ovf_env"
    state: directory
- name: Deploy OVF environment file
  template:
    src: "ovf-env.xml.j2" 
    dest: "{{ csr_vm_safe_dst_full_path }}/ovf_env/ovf-env.xml"
- name: Read bootstrap configuration file
  shell: cat {{ csr_config_file }}
  register: csr_config_items
  when: csr_config_file is defined
- name: Insert bootstrap configuration
  lineinfile:
    dest: "{{ csr_vm_safe_dst_full_path }}/ovf_env/ovf-env.xml"
    line: <Property oe:key="com.cisco.csr1000v.ios-config-{{ '%04d' | format(item.0 + 1) }}.1" oe:value="{{ item.1 }}"/>
    insertbefore: "</PropertySection>$"
  with_indexed_items: csr_config_items.stdout_lines
  when: csr_config_items.changed
- name: Create OVF environment ISO
  command: 'hdiutil makehybrid -iso -joliet -o "{{ csr_vm_safe_dst_full_path }}/{{ csr_vm_name }}-ovf_env.iso" "{{ csr_vm_safe_dst_full_path }}/ovf_env/"'
- name: Attach OVF environment ISO to virtual machine
  lineinfile:
    dest: "{{ csr_vm_vmx_path }}"
    line: ide1:1.fileName = "{{ csr_vm_name }}-ovf_env.iso"
    insertbefore: ide1:1.clientDevice = "FALSE"
- name: Change OVF environment CD-ROM to ISO type
  lineinfile:
    dest: "{{ csr_vm_vmx_path }}"
    line: ide1:1.deviceType = "cdrom-image"
    regexp: '^ide1:1.deviceType ='
- name: Connect OVF environment ISO to virtual machine
  lineinfile:
    dest: "{{ csr_vm_vmx_path }}"
    line: ide1:1.startConnected = "TRUE"
    regexp: '^ide1:1.startConnected ='